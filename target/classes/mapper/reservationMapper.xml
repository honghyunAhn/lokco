<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="global.sesoc.teamProject.dao.ReservationMapper">

<!-- 예약 가능한 락커의 갯수 -->
<select id="nonReserved" resultType="int" parameterType="string"> 
select
	count(*)
from 
	locker_reservation
where
	locker_name = #{locker_name} and reserved = 'no'
</select>

<!-- 락커 목록 뽑아오기 -->
<select id="lockerList" resultType="reservation" parameterType="string">
select
	*
from
	locker_reservation
where 
	locker_name = #{locker_name}
</select>

<!-- 구매할 때 사용하는 목록 -->
<select id="lockerList2" resultType="reservation" parameterType="reservation">
select
	*
from
	locker_reservation
where 
	locker_name = #{locker_name} and locker_n = #{locker_n}
</select>

<!-- 중복 예약 방지 용 -->
<select id="doubleCheck" resultType="int" parameterType="string">
select
	count(*)
from 
	locker_reservation
where email = #{email}
</select>

<!-- 예약 시, 예약여부 확인 컬럼과 이메일 컬럼을 업데이트 시켜 줌 -->
<update id="reservation" parameterType="reservation">
update
	locker_reservation
set
	reserved = 'yes'
	,email = #{email}
	,inputdate = sysdate
where
	locker_n = #{locker_n} and locker_name = #{locker_name}
</update>

<!-- 결제 완료시 -->
<update id="paid" parameterType="reservation">
update
	locker_reservation
set
	paid = 'yes'
where
	locker_n = #{locker_n} and locker_name = #{locker_name}
</update>

<!-- 예약 내역 -->
<select id="getReservation" resultType="reservation" parameterType="string">
select
	locker_n
	,locker_name
	,to_char(inputdate,'yy/mm/dd hh:Mi:ss') as inputdate
	,paid
from
	locker_reservation
where 
	email = #{email}
</select>

<select id="getReservation2" resultType="reservation" parameterType="string">
select
	locker_n
	,locker_name
	,to_char(inputdate,'yy/mm/dd hh:Mi:ss') as inputdate
from
	locker_reservation
where 
	email = #{email2}
</select>

<!-- 예약 취소 -->
<update id="cancle" parameterType="reservation">
update
	locker_reservation
	
set
	reserved = 'no'
	,email = null
	,inputdate = null
	,paid ='no'
where
	locker_name = #{locker_name} and locker_n = #{locker_n}
</update>


</mapper>

